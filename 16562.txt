#include <iostream>


using namespace std;

int n, m, k;
int parent[20000];
int aa[20000];
int find(int v) {
	if (v == parent[v]) return v;
	else return parent[v] = find(parent[v]);
}
void _union(int a, int b) {

	a = find(a);
	b = find(b);

	if (aa[a] < aa[b]) parent[b] = a;
	else parent[a] = b;

}
int main() {
	cin >> n >> m >> k;

	for (int i = 1; i <= n; i++) cin >> aa[i];
	for (int i = 1; i <= n; i++) parent[i] = i;

	for (int i = 0; i < m; i++)
	{
		int a = 0, b = 0; cin >> a >> b;
		if (find(a) != find(b)) _union(a, b);
	}
	int s = 0;
	for (int i = 1; i <= n; i++)
	{
		if (find(i) != 0) {
			s += aa[find(i)];
			_union(0, find(i));
		}
	}
	if (s <= k) cout << s;
	else cout << "Oh no";
	return 0;
}
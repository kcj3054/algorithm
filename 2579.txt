#include <iostream>
#include <algorithm>

using namespace std;

int d[301][3];
int cost[301];

int main() {

	int n = 0; cin >> n;
	for (int i = 1; i <= n; i++) cin >> cost[i];
	d[1][1] = cost[1];
	d[1][2] = 0;
	d[2][1] = cost[2];
	d[2][2] = cost[1] + cost[2];

	for (int i = 3; i <= n; ++i) {
		d[i][1] = max(d[i - 2][1], d[i - 2][2]) + cost[i];
		d[i][2] = d[i - 1][1] + cost[i];
	}
	cout << max(d[n][1], d[n][2]);                // 마지막 계단을 연속 1 or 2번으로 오른 경우 중 최댓값 
	
	return 0;
}

/*
d[i][j] - > j번연속 밟았을때  i번 계산에 있을때 비요ㅛㅇ 
d[i][1] = max(d[i - 2][1], d[i -2][2]) + cost[i]

ans - > max(d[n][1], d[n][2]) 
*/
#include <bits/stdc++.h>


using namespace std;


int n, k, res;
int visited[200001];
int from[200001];
int dist[200001];
void print(int n, int m) {

	if (n != m) {
		print(n, from[m]);
	}
	cout << m << ' ';
}
void bfs(int x) {

	queue<int> q;
	q.push(x);
	visited[x] = 1;

	while (!q.empty())
	{
		int now = q.front(); q.pop();

		if (now == k) {	
			res = dist[now];
			return;
		}
		if (now + 1 <= 100000 && !visited[now + 1]) {
			q.push(now + 1);
			from[now + 1] = now;
			dist[now + 1] = dist[now] + 1;
			visited[now + 1] = 1;
		}
		if (now - 1 >= 0 && !visited[now - 1]) {
			q.push(now - 1);
			from[now - 1] = now;
			dist[now - 1] = dist[now] + 1;
			visited[now - 1] = 1;
		}
		if (now * 2 <= 100000 && !visited[now * 2]) {
			q.push(now * 2);
			from[now * 2] = now;
			dist[now * 2] = dist[now] + 1;
			visited[now * 2] = 1;
		}

	}
}
int main() {

	res = 100000;
	cin >> n >> k;

	bfs(n);
	cout << res << endl;
	print(n, k);
	return 0;
}
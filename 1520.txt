//내리막길 문제 dfs + dp 
#include <iostream>
#include <memory.h>

using namespace std;

int m, n;
int map[501][501];
int d[501][501];
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1, 0, -1 };

int dfs(int x, int y) {
	if (x == 0 && y == 0) {
		return 1;
	}
	if (d[x][y] == -1) {
		
		d[x][y] = 0;
		for (int i = 0; i < 4; i++)
		{
			int nx = x + dx[i];
			int ny = y + dy[i];
			//map조건 잘 제크, 더 낮은 지점으로만  < - > 이전은 무조건 더 커야한다 같아도 continue 
			if (nx < 0 || ny < 0 || nx >= m || ny >= n || map[nx][ny] <= map[x][y]) continue;
			 d[x][y] += dfs(nx, ny);
		}
		 
	}
	return d[x][y];
}
int main() {

	cin >> m >> n;
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; ++j)
		{
			cin >> map[i][j];
			d[i][j] = -1;
		}
	}
	cout << dfs(m - 1, n - 1) << endl;
	return 0;
}
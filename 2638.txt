#include <iostream>
#include <memory.h>
#include <queue>
#include <vector>

/*
두변이상 실내온도랑 접촉 2로표시 s
*/
using namespace std;

bool visited[1001][1001];
queue <pair<int, int>> v;
int map[1001][1001];
int mapCopy[1001][1001];
int n, m, ans;
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1,0, -1 };

void print() {
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; ++j)
		{
			cout << map[i][j];
		}
		cout << endl;
	}
}
void Input() {
	cin >> n >> m;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; ++j)
		{
			cin >> map[i][j];
			if (map[i][j] == 1)	v.push({ i ,j });
		}
	}
}
//바깥공기는 1
void bfs() {
	queue<pair<int, int >> q;
	q.push({ 0 ,0 });
	visited[0][0] = 1;

	while (!q.empty())
	{
		int x = q.front().first;
		int y = q.front().second;
		q.pop();
		for (int i = 0; i < 4; i++)
		{
			int nx = x + dx[i];
			int ny = y + dy[i];
			//범위 바깥이나 치즈이거나 그러면 continue
			if (nx < 0 || ny < 0 || nx >= n || ny >= m || visited[nx][ny] == 1 
			|| map[nx][ny] == 1) continue;

			q.push({ nx, ny });
			visited[nx][ny] = 1;
		}
	}
}
int solve() {
	while (true)
	{
		ans++;
		memset(visited, 0, sizeof(visited));
		bfs();
		int cnt = 0;
		//지울꺼 분별 , v는 치즈
		
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; ++j)
			{
				if (map[i][j] == 0) continue;

				for (int k = 0; k < 4; k++)
				{
					int nx = i + dx[k];
					int ny = j + dy[k];
					if (nx < 0 || ny < 0 || nx >= n || ny >= m) continue;
					if (map[nx][ny] == 0 && visited[nx][ny] == 1) {
						cnt++;
					}
				}
				if (cnt >= 2)map[i][j] = 2; //지울 예정
				cnt = 0;
			}
		}
			
		
		//녹이기 
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; ++j)
			{
				if (map[i][j] == 2) map[i][j] = 0;
			}
		}

		//종료조건 
		int tmp = 0;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; ++j)
			{
				if (map[i][j] == 1)tmp++;
			}
		}
		if (tmp == 0)break;
		tmp = 0;
	}
	return ans;
}
int main() {

	Input();
	cout << solve() << endl;
	return 0;
}
#include <iostream>
#include <vector>
#include <algorithm>
#define ll long long
using namespace std;

ll n, l;
ll leftMax, rightMax = 9876543211;
ll le, ri; // 개미번호 
vector<pair< int, int>> antIdx;

bool cmp(pair<int, int> a, pair<int, int> b) {
	return a.second < b.second;
}
int main() {

	cin >> n >> l;
	vector<ll> v;
	v.resize(n + 1);
	for (int i = 1; i <= n; i++)	cin >> v[i];

	//개미가 떨어지는 순서는 왼쪽에 a개마리 일때 왼쪽은 p[a]개미
	//오른쪽일 경우 p[a + 1] 
	int leftCnt = 0;
	for (int i = 1; i <= n; i++)
	{
		if (v[i] < 0) {
			if (leftMax < abs(v[i])) {
				leftMax = abs(v[i]);
			}
			leftCnt++;
		}
		else {
			if (rightMax > v[i]) {
				rightMax = v[i];
			}
		}
		antIdx.push_back({ i, abs(v[i]) });
	}

	sort(antIdx.begin(), antIdx.end(), cmp);  //오름차순 

	rightMax = l - rightMax;
	if (rightMax > leftMax) cout << antIdx[leftCnt].first << " " << rightMax;
	else cout << antIdx[leftCnt - 1].first << " " << leftMax;

	return 0;
}
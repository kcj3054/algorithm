#include <bits/stdc++.h>

using namespace std;
#define ll long long
ll n, ans;
vector<int> v;
int ch[100001];
int main() {
	// 123456
	ios::ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> n;
	v.resize(n); 
	for (int i = 0; i < n; ++i) cin >> v[i];

	// 12345
	//set <중복 x, 집합>
	//int le = 0, ri = le + 1;// -> 2n번 반복 
	map<int, int> m; // -> logN  -> 이진트리 

	//for (int i = 0; i < n; i++)
	//{
	//	int le = i, ri = i + 1;
	//	while (le < ri)                    // le < n - 1 
	//	{

	//	}
	//}
	
	//[)
	set<int> s; // 중복이 되지 않게 체크 하기 위해서, 중복이 되는 값을 넣으면 무시한다 
	
	// s.find(1) == s.end()  -> 못 찾으면 end를 반호낳나다  
	// 특정 le에서 최대 ri 값을 구한 뒤 sum +=    -> [)

	int le = 0, ri = 0;
	v.push_back(0);
	while (le < n) {

		/*
		bool flag = ri == n;
		if (!flag) flag = v[ri]가 s에있을시 
		*/

		// ri가 n이면 range out !
		if (s.find(v[ri]) != s.end() || ri == n) {
			ans += ri - le;
			s.erase(v[le]);
			le++;
		}
		else
		{
			s.insert(v[ri]);
			ri++;
		}
	}
	cout << ans << endl;
	return 0;
}
/*
1 1 1 1 1 
*/